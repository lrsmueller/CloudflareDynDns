name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

    #   Install the cosign tool except on PR
    #   https://github.com/sigstore/cosign-installer
    #   - name: Install cosign
    #     if: github.event_name != 'pull_request'
    #     uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
    #     with:
    #     cosign-release: 'v2.1.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REPO_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: ./CloudflareDynDns
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Ntfy Notifications
    #   - name: ntfy failed notifications
    #     uses: niniyas/ntfy-action@master
    #     if: failure()
    #     with:
    #       url: ${{ secrets.NTFY_URL }}
    #       topic: ${{ secrets.NTFY_TOPIC }}
    #       tags: github,action,failed,rotating_light
    #       priority: 5
    #       details: 'Workflow has failed!'
    #       headers: '${{ secrets.NTFY_HEADERS }}'

    #   - name: ntfy cancelled notifications
    #     uses: niniyas/ntfy-action@master
    #     if: cancelled()
    #     with:
    #       url: ${{ secrets.NTFY_URL }}
    #       topic: ${{ secrets.NTFY_TOPIC }}
    #       tags: github,action,cancelled,skull
    #       details: 'Workflow has been cancelled!'
    #       headers: '${{ secrets.NTFY_HEADERS }}'

    #   - name: ntfy success notifications
    #     uses: niniyas/ntfy-action@master
    #     if: success()
    #     with:
    #       url: ${{ secrets.NTFY_URL }}
    #       topic: ${{ secrets.NTFY_TOPIC }}
    #       tags: github,action,+1,partying_face
    #       priority: 4
    #       details: 'Workflow has been completed successfully!'
    #       headers: '${{ secrets.NTFY_HEADERS }}'